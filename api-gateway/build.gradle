plugins {
	// Plugin Java para suportar a compilação de código Java
	id 'java'

	// Plugin Spring Boot para construir aplicações Spring Boot
	id 'org.springframework.boot' version '3.4.0'

	// Plugin de gerenciamento de dependências do Spring
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example' // Definindo o grupo do projeto
version = '0.0.1-SNAPSHOT' // Definindo a versão do projeto

// Configuração do Java para garantir o uso da versão 17
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17) // Define a versão do Java como 17
	}
}

// Configuração das dependências de compilação
configurations {
	compileOnly {
		extendsFrom annotationProcessor // Permite a inclusão de processadores de anotação sem incluir as dependências em tempo de execução
	}
}

// Repositórios para resolver dependências
repositories {
	mavenCentral() // Usando o repositório Maven Central para resolver dependências
}

// Variáveis externas definidas para reutilização
ext {
	set('springCloudVersion', "2024.0.0") // Definindo a versão do Spring Cloud a ser usada
}

// Dependências do projeto
dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway' // Adiciona o starter do Spring Cloud Gateway para construir um Gateway API
	compileOnly 'org.projectlombok:lombok'  // Lombok para reduzir boilerplate no código, como getters, setters, etc.
	developmentOnly 'org.springframework.boot:spring-boot-devtools'  // Ferramentas de desenvolvimento para facilitar a depuração e reinicialização do Spring Boot
}

// Gerenciamento de dependências com o Spring Cloud
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}" // Importa as dependências do Spring Cloud para garantir versões consistentes
	}
}

// Configuração do teste
tasks.named('test') {
	useJUnitPlatform() // Configura o uso do JUnit 5 para testes
}
