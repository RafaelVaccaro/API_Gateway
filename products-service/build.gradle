plugins {
	id 'java' // Plugin para compilar código Java
	id 'org.springframework.boot' version '3.4.0' // Plugin do Spring Boot para criar uma aplicação Spring Boot
	id 'io.spring.dependency-management' version '1.1.6' // Plugin de gerenciamento de dependências para usar o Spring Dependency Management
}

group = 'com.example' // Define o grupo do projeto
version = '0.0.1-SNAPSHOT' // Define a versão do projeto

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17) // Configuração para usar o JDK 17
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor // Configuração para usar o Lombok com o annotationProcessor
	}
}

repositories {
	mavenCentral() // Repositório Maven Central para buscar dependências
}

dependencies {
	// Dependências principais do projeto
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // Starter para integração com JPA
	implementation 'org.springframework.boot:spring-boot-starter-web' // Starter para aplicações web com Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-validation' // Starter para validação de dados com Hibernate Validator
	implementation 'org.postgresql:postgresql' // Driver do PostgreSQL gerenciado pelo Spring Boot

	// Lombok para evitar boilerplate
	compileOnly 'org.projectlombok:lombok' // Lombok apenas em tempo de compilação
	annotationProcessor 'org.projectlombok:lombok' // Processador de anotações Lombok

	// Ferramentas de desenvolvimento
	developmentOnly 'org.springframework.boot:spring-boot-devtools' // Ferramentas de desenvolvimento como live reload

	// Dependências para testes
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // Starter para testes com JUnit, Mockito, etc.
}

tasks.named('test') {
	useJUnitPlatform() // Configuração para usar o JUnit 5 para os testes
}
